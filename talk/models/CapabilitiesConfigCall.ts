/* tslint:disable */
/* eslint-disable */
/**
 * spreed
 * Chat, video & audio-conferencing using WebRTC
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.ts';
/**
 * 
 * @export
 * @interface CapabilitiesConfigCall
 */
export interface CapabilitiesConfigCall {
    /**
     * 
     * @type {boolean}
     * @memberof CapabilitiesConfigCall
     */
    enabled: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CapabilitiesConfigCall
     */
    breakoutRooms: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CapabilitiesConfigCall
     */
    recording: boolean;
    /**
     * 
     * @type {number}
     * @memberof CapabilitiesConfigCall
     */
    recordingConsent: number;
    /**
     * 
     * @type {Array<string>}
     * @memberof CapabilitiesConfigCall
     */
    supportedReactions: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof CapabilitiesConfigCall
     */
    predefinedBackgrounds: Array<string>;
    /**
     * 
     * @type {boolean}
     * @memberof CapabilitiesConfigCall
     */
    canUploadBackground: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CapabilitiesConfigCall
     */
    sipEnabled: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CapabilitiesConfigCall
     */
    sipDialoutEnabled: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CapabilitiesConfigCall
     */
    canEnableSip: boolean;
}

/**
 * Check if a given object implements the CapabilitiesConfigCall interface.
 */
export function instanceOfCapabilitiesConfigCall(value: object): value is CapabilitiesConfigCall {
    if (!('enabled' in value) || value['enabled'] === undefined) return false;
    if (!('breakoutRooms' in value) || value['breakoutRooms'] === undefined) return false;
    if (!('recording' in value) || value['recording'] === undefined) return false;
    if (!('recordingConsent' in value) || value['recordingConsent'] === undefined) return false;
    if (!('supportedReactions' in value) || value['supportedReactions'] === undefined) return false;
    if (!('predefinedBackgrounds' in value) || value['predefinedBackgrounds'] === undefined) return false;
    if (!('canUploadBackground' in value) || value['canUploadBackground'] === undefined) return false;
    if (!('sipEnabled' in value) || value['sipEnabled'] === undefined) return false;
    if (!('sipDialoutEnabled' in value) || value['sipDialoutEnabled'] === undefined) return false;
    if (!('canEnableSip' in value) || value['canEnableSip'] === undefined) return false;
    return true;
}

export function CapabilitiesConfigCallFromJSON(json: any): CapabilitiesConfigCall {
    return CapabilitiesConfigCallFromJSONTyped(json, false);
}

export function CapabilitiesConfigCallFromJSONTyped(json: any, ignoreDiscriminator: boolean): CapabilitiesConfigCall {
    if (json == null) {
        return json;
    }
    return {
        
        'enabled': json['enabled'],
        'breakoutRooms': json['breakout-rooms'],
        'recording': json['recording'],
        'recordingConsent': json['recording-consent'],
        'supportedReactions': json['supported-reactions'],
        'predefinedBackgrounds': json['predefined-backgrounds'],
        'canUploadBackground': json['can-upload-background'],
        'sipEnabled': json['sip-enabled'],
        'sipDialoutEnabled': json['sip-dialout-enabled'],
        'canEnableSip': json['can-enable-sip'],
    };
}

export function CapabilitiesConfigCallToJSON(value?: CapabilitiesConfigCall | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'enabled': value['enabled'],
        'breakout-rooms': value['breakoutRooms'],
        'recording': value['recording'],
        'recording-consent': value['recordingConsent'],
        'supported-reactions': value['supportedReactions'],
        'predefined-backgrounds': value['predefinedBackgrounds'],
        'can-upload-background': value['canUploadBackground'],
        'sip-enabled': value['sipEnabled'],
        'sip-dialout-enabled': value['sipDialoutEnabled'],
        'can-enable-sip': value['canEnableSip'],
    };
}

