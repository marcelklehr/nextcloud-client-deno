/* tslint:disable */
/* eslint-disable */
/**
 * spreed
 * Chat, video & audio-conferencing using WebRTC
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.ts';
import type { RichObjectParameter } from './RichObjectParameter.ts';
import {
    RichObjectParameterFromJSON,
    RichObjectParameterFromJSONTyped,
    RichObjectParameterToJSON,
} from './RichObjectParameter.ts';

/**
 * 
 * @export
 * @interface RoomLastMessage
 */
export interface RoomLastMessage {
    /**
     * 
     * @type {string}
     * @memberof RoomLastMessage
     */
    actorDisplayName: string;
    /**
     * 
     * @type {string}
     * @memberof RoomLastMessage
     */
    actorId: string;
    /**
     * 
     * @type {string}
     * @memberof RoomLastMessage
     */
    actorType: string;
    /**
     * 
     * @type {number}
     * @memberof RoomLastMessage
     */
    expirationTimestamp: number;
    /**
     * 
     * @type {string}
     * @memberof RoomLastMessage
     */
    message: string;
    /**
     * 
     * @type {{ [key: string]: RichObjectParameter; }}
     * @memberof RoomLastMessage
     */
    messageParameters: { [key: string]: RichObjectParameter; };
    /**
     * 
     * @type {string}
     * @memberof RoomLastMessage
     */
    messageType: string;
    /**
     * 
     * @type {string}
     * @memberof RoomLastMessage
     */
    systemMessage: string;
    /**
     * 
     * @type {boolean}
     * @memberof RoomLastMessage
     */
    deleted?: boolean;
    /**
     * 
     * @type {number}
     * @memberof RoomLastMessage
     */
    id: number;
    /**
     * 
     * @type {boolean}
     * @memberof RoomLastMessage
     */
    isReplyable: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof RoomLastMessage
     */
    markdown: boolean;
    /**
     * 
     * @type {{ [key: string]: number; }}
     * @memberof RoomLastMessage
     */
    reactions: { [key: string]: number; };
    /**
     * 
     * @type {Array<string>}
     * @memberof RoomLastMessage
     */
    reactionsSelf?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof RoomLastMessage
     */
    referenceId: string;
    /**
     * 
     * @type {number}
     * @memberof RoomLastMessage
     */
    timestamp: number;
    /**
     * 
     * @type {string}
     * @memberof RoomLastMessage
     */
    token: string;
    /**
     * 
     * @type {string}
     * @memberof RoomLastMessage
     */
    lastEditActorDisplayName?: string;
    /**
     * 
     * @type {string}
     * @memberof RoomLastMessage
     */
    lastEditActorId?: string;
    /**
     * 
     * @type {string}
     * @memberof RoomLastMessage
     */
    lastEditActorType?: string;
    /**
     * 
     * @type {number}
     * @memberof RoomLastMessage
     */
    lastEditTimestamp?: number;
    /**
     * 
     * @type {boolean}
     * @memberof RoomLastMessage
     */
    silent?: boolean;
}

/**
 * Check if a given object implements the RoomLastMessage interface.
 */
export function instanceOfRoomLastMessage(value: object): value is RoomLastMessage {
    if (!('actorDisplayName' in value) || value['actorDisplayName'] === undefined) return false;
    if (!('actorId' in value) || value['actorId'] === undefined) return false;
    if (!('actorType' in value) || value['actorType'] === undefined) return false;
    if (!('expirationTimestamp' in value) || value['expirationTimestamp'] === undefined) return false;
    if (!('message' in value) || value['message'] === undefined) return false;
    if (!('messageParameters' in value) || value['messageParameters'] === undefined) return false;
    if (!('messageType' in value) || value['messageType'] === undefined) return false;
    if (!('systemMessage' in value) || value['systemMessage'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('isReplyable' in value) || value['isReplyable'] === undefined) return false;
    if (!('markdown' in value) || value['markdown'] === undefined) return false;
    if (!('reactions' in value) || value['reactions'] === undefined) return false;
    if (!('referenceId' in value) || value['referenceId'] === undefined) return false;
    if (!('timestamp' in value) || value['timestamp'] === undefined) return false;
    if (!('token' in value) || value['token'] === undefined) return false;
    return true;
}

export function RoomLastMessageFromJSON(json: any): RoomLastMessage {
    return RoomLastMessageFromJSONTyped(json, false);
}

export function RoomLastMessageFromJSONTyped(json: any, ignoreDiscriminator: boolean): RoomLastMessage {
    if (json == null) {
        return json;
    }
    return {
        
        'actorDisplayName': json['actorDisplayName'],
        'actorId': json['actorId'],
        'actorType': json['actorType'],
        'expirationTimestamp': json['expirationTimestamp'],
        'message': json['message'],
        'messageParameters': (mapValues(json['messageParameters'], RichObjectParameterFromJSON)),
        'messageType': json['messageType'],
        'systemMessage': json['systemMessage'],
        'deleted': json['deleted'] == null ? undefined : json['deleted'],
        'id': json['id'],
        'isReplyable': json['isReplyable'],
        'markdown': json['markdown'],
        'reactions': json['reactions'],
        'reactionsSelf': json['reactionsSelf'] == null ? undefined : json['reactionsSelf'],
        'referenceId': json['referenceId'],
        'timestamp': json['timestamp'],
        'token': json['token'],
        'lastEditActorDisplayName': json['lastEditActorDisplayName'] == null ? undefined : json['lastEditActorDisplayName'],
        'lastEditActorId': json['lastEditActorId'] == null ? undefined : json['lastEditActorId'],
        'lastEditActorType': json['lastEditActorType'] == null ? undefined : json['lastEditActorType'],
        'lastEditTimestamp': json['lastEditTimestamp'] == null ? undefined : json['lastEditTimestamp'],
        'silent': json['silent'] == null ? undefined : json['silent'],
    };
}

export function RoomLastMessageToJSON(value?: RoomLastMessage | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'actorDisplayName': value['actorDisplayName'],
        'actorId': value['actorId'],
        'actorType': value['actorType'],
        'expirationTimestamp': value['expirationTimestamp'],
        'message': value['message'],
        'messageParameters': (mapValues(value['messageParameters'], RichObjectParameterToJSON)),
        'messageType': value['messageType'],
        'systemMessage': value['systemMessage'],
        'deleted': value['deleted'],
        'id': value['id'],
        'isReplyable': value['isReplyable'],
        'markdown': value['markdown'],
        'reactions': value['reactions'],
        'reactionsSelf': value['reactionsSelf'],
        'referenceId': value['referenceId'],
        'timestamp': value['timestamp'],
        'token': value['token'],
        'lastEditActorDisplayName': value['lastEditActorDisplayName'],
        'lastEditActorId': value['lastEditActorId'],
        'lastEditActorType': value['lastEditActorType'],
        'lastEditTimestamp': value['lastEditTimestamp'],
        'silent': value['silent'],
    };
}

