/* tslint:disable */
/* eslint-disable */
/**
 * spreed
 * Chat, video & audio-conferencing using WebRTC
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.ts';
/**
 * 
 * @export
 * @interface CapabilitiesConfigChat
 */
export interface CapabilitiesConfigChat {
    /**
     * 
     * @type {number}
     * @memberof CapabilitiesConfigChat
     */
    maxLength: number;
    /**
     * 
     * @type {number}
     * @memberof CapabilitiesConfigChat
     */
    readPrivacy: number;
    /**
     * 
     * @type {boolean}
     * @memberof CapabilitiesConfigChat
     */
    hasTranslationProviders: boolean;
    /**
     * 
     * @type {number}
     * @memberof CapabilitiesConfigChat
     */
    typingPrivacy: number;
}

/**
 * Check if a given object implements the CapabilitiesConfigChat interface.
 */
export function instanceOfCapabilitiesConfigChat(value: object): value is CapabilitiesConfigChat {
    if (!('maxLength' in value) || value['maxLength'] === undefined) return false;
    if (!('readPrivacy' in value) || value['readPrivacy'] === undefined) return false;
    if (!('hasTranslationProviders' in value) || value['hasTranslationProviders'] === undefined) return false;
    if (!('typingPrivacy' in value) || value['typingPrivacy'] === undefined) return false;
    return true;
}

export function CapabilitiesConfigChatFromJSON(json: any): CapabilitiesConfigChat {
    return CapabilitiesConfigChatFromJSONTyped(json, false);
}

export function CapabilitiesConfigChatFromJSONTyped(json: any, ignoreDiscriminator: boolean): CapabilitiesConfigChat {
    if (json == null) {
        return json;
    }
    return {
        
        'maxLength': json['max-length'],
        'readPrivacy': json['read-privacy'],
        'hasTranslationProviders': json['has-translation-providers'],
        'typingPrivacy': json['typing-privacy'],
    };
}

export function CapabilitiesConfigChatToJSON(value?: CapabilitiesConfigChat | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'max-length': value['maxLength'],
        'read-privacy': value['readPrivacy'],
        'has-translation-providers': value['hasTranslationProviders'],
        'typing-privacy': value['typingPrivacy'],
    };
}

