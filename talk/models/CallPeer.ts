/* tslint:disable */
/* eslint-disable */
/**
 * spreed
 * Chat, video & audio-conferencing using WebRTC
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.ts';
/**
 * 
 * @export
 * @interface CallPeer
 */
export interface CallPeer {
    /**
     * 
     * @type {string}
     * @memberof CallPeer
     */
    actorId: string;
    /**
     * 
     * @type {string}
     * @memberof CallPeer
     */
    actorType: string;
    /**
     * 
     * @type {string}
     * @memberof CallPeer
     */
    displayName: string;
    /**
     * 
     * @type {number}
     * @memberof CallPeer
     */
    lastPing: number;
    /**
     * 
     * @type {string}
     * @memberof CallPeer
     */
    sessionId: string;
    /**
     * 
     * @type {string}
     * @memberof CallPeer
     */
    token: string;
}

/**
 * Check if a given object implements the CallPeer interface.
 */
export function instanceOfCallPeer(value: object): value is CallPeer {
    if (!('actorId' in value) || value['actorId'] === undefined) return false;
    if (!('actorType' in value) || value['actorType'] === undefined) return false;
    if (!('displayName' in value) || value['displayName'] === undefined) return false;
    if (!('lastPing' in value) || value['lastPing'] === undefined) return false;
    if (!('sessionId' in value) || value['sessionId'] === undefined) return false;
    if (!('token' in value) || value['token'] === undefined) return false;
    return true;
}

export function CallPeerFromJSON(json: any): CallPeer {
    return CallPeerFromJSONTyped(json, false);
}

export function CallPeerFromJSONTyped(json: any, ignoreDiscriminator: boolean): CallPeer {
    if (json == null) {
        return json;
    }
    return {
        
        'actorId': json['actorId'],
        'actorType': json['actorType'],
        'displayName': json['displayName'],
        'lastPing': json['lastPing'],
        'sessionId': json['sessionId'],
        'token': json['token'],
    };
}

export function CallPeerToJSON(value?: CallPeer | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'actorId': value['actorId'],
        'actorType': value['actorType'],
        'displayName': value['displayName'],
        'lastPing': value['lastPing'],
        'sessionId': value['sessionId'],
        'token': value['token'],
    };
}

