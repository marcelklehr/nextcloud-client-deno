/* tslint:disable */
/* eslint-disable */
/**
 * spreed
 * Chat, video & audio-conferencing using WebRTC
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.ts';
/**
 * 
 * @export
 * @interface Ban
 */
export interface Ban {
    /**
     * 
     * @type {number}
     * @memberof Ban
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof Ban
     */
    actorType: string;
    /**
     * 
     * @type {string}
     * @memberof Ban
     */
    actorId: string;
    /**
     * 
     * @type {string}
     * @memberof Ban
     */
    bannedType: string;
    /**
     * 
     * @type {string}
     * @memberof Ban
     */
    bannedId: string;
    /**
     * 
     * @type {number}
     * @memberof Ban
     */
    bannedTime: number;
    /**
     * 
     * @type {string}
     * @memberof Ban
     */
    internalNote: string;
}

/**
 * Check if a given object implements the Ban interface.
 */
export function instanceOfBan(value: object): value is Ban {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('actorType' in value) || value['actorType'] === undefined) return false;
    if (!('actorId' in value) || value['actorId'] === undefined) return false;
    if (!('bannedType' in value) || value['bannedType'] === undefined) return false;
    if (!('bannedId' in value) || value['bannedId'] === undefined) return false;
    if (!('bannedTime' in value) || value['bannedTime'] === undefined) return false;
    if (!('internalNote' in value) || value['internalNote'] === undefined) return false;
    return true;
}

export function BanFromJSON(json: any): Ban {
    return BanFromJSONTyped(json, false);
}

export function BanFromJSONTyped(json: any, ignoreDiscriminator: boolean): Ban {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'actorType': json['actorType'],
        'actorId': json['actorId'],
        'bannedType': json['bannedType'],
        'bannedId': json['bannedId'],
        'bannedTime': json['bannedTime'],
        'internalNote': json['internalNote'],
    };
}

export function BanToJSON(value?: Ban | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'actorType': value['actorType'],
        'actorId': value['actorId'],
        'bannedType': value['bannedType'],
        'bannedId': value['bannedId'],
        'bannedTime': value['bannedTime'],
        'internalNote': value['internalNote'],
    };
}

