/* tslint:disable */
/* eslint-disable */
/**
 * spreed
 * Chat, video & audio-conferencing using WebRTC
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.ts';
import type { CapabilitiesConfig } from './CapabilitiesConfig.ts';
import {
    CapabilitiesConfigFromJSON,
    CapabilitiesConfigFromJSONTyped,
    CapabilitiesConfigToJSON,
} from './CapabilitiesConfig.ts';

/**
 * 
 * @export
 * @interface Capabilities
 */
export interface Capabilities {
    /**
     * 
     * @type {Array<string>}
     * @memberof Capabilities
     */
    features: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof Capabilities
     */
    featuresLocal: Array<string>;
    /**
     * 
     * @type {CapabilitiesConfig}
     * @memberof Capabilities
     */
    config: CapabilitiesConfig;
    /**
     * 
     * @type {{ [key: string]: Array<string>; }}
     * @memberof Capabilities
     */
    configLocal: { [key: string]: Array<string>; };
    /**
     * 
     * @type {string}
     * @memberof Capabilities
     */
    version: string;
}

/**
 * Check if a given object implements the Capabilities interface.
 */
export function instanceOfCapabilities(value: object): value is Capabilities {
    if (!('features' in value) || value['features'] === undefined) return false;
    if (!('featuresLocal' in value) || value['featuresLocal'] === undefined) return false;
    if (!('config' in value) || value['config'] === undefined) return false;
    if (!('configLocal' in value) || value['configLocal'] === undefined) return false;
    if (!('version' in value) || value['version'] === undefined) return false;
    return true;
}

export function CapabilitiesFromJSON(json: any): Capabilities {
    return CapabilitiesFromJSONTyped(json, false);
}

export function CapabilitiesFromJSONTyped(json: any, ignoreDiscriminator: boolean): Capabilities {
    if (json == null) {
        return json;
    }
    return {
        
        'features': json['features'],
        'featuresLocal': json['features-local'],
        'config': CapabilitiesConfigFromJSON(json['config']),
        'configLocal': json['config-local'],
        'version': json['version'],
    };
}

export function CapabilitiesToJSON(value?: Capabilities | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'features': value['features'],
        'features-local': value['featuresLocal'],
        'config': CapabilitiesConfigToJSON(value['config']),
        'config-local': value['configLocal'],
        'version': value['version'],
    };
}

