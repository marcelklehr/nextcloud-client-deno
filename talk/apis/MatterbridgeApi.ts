/* tslint:disable */
/* eslint-disable */
/**
 * spreed
 * Chat, video & audio-conferencing using WebRTC
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime.ts';
import type {
  BanBanActor400Response,
  MatterbridgeDeleteBridgeOfRoom200Response,
  MatterbridgeEditBridgeOfRoom200Response,
  MatterbridgeGetBridgeOfRoom200Response,
} from '../models/index.ts';
import {
    BanBanActor400ResponseFromJSON,
    BanBanActor400ResponseToJSON,
    MatterbridgeDeleteBridgeOfRoom200ResponseFromJSON,
    MatterbridgeDeleteBridgeOfRoom200ResponseToJSON,
    MatterbridgeEditBridgeOfRoom200ResponseFromJSON,
    MatterbridgeEditBridgeOfRoom200ResponseToJSON,
    MatterbridgeGetBridgeOfRoom200ResponseFromJSON,
    MatterbridgeGetBridgeOfRoom200ResponseToJSON,
} from '../models/index.ts';

export interface MatterbridgeDeleteBridgeOfRoomRequest {
    apiVersion: MatterbridgeDeleteBridgeOfRoomApiVersionEnum;
    token: string;
    oCSAPIRequest: boolean;
}

export interface MatterbridgeEditBridgeOfRoomRequest {
    enabled: MatterbridgeEditBridgeOfRoomEnabledEnum;
    apiVersion: MatterbridgeEditBridgeOfRoomApiVersionEnum;
    token: string;
    oCSAPIRequest: boolean;
    parts?: string;
}

export interface MatterbridgeGetBridgeOfRoomRequest {
    apiVersion: MatterbridgeGetBridgeOfRoomApiVersionEnum;
    token: string;
    oCSAPIRequest: boolean;
}

export interface MatterbridgeGetBridgeProcessStateRequest {
    apiVersion: MatterbridgeGetBridgeProcessStateApiVersionEnum;
    token: string;
    oCSAPIRequest: boolean;
}

/**
 * 
 */
export class MatterbridgeApi extends runtime.BaseAPI {

    /**
     * Delete bridge of one room
     */
    async matterbridgeDeleteBridgeOfRoomRaw(requestParameters: MatterbridgeDeleteBridgeOfRoomRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MatterbridgeDeleteBridgeOfRoom200Response>> {
        if (requestParameters['apiVersion'] == null) {
            throw new runtime.RequiredError(
                'apiVersion',
                'Required parameter "apiVersion" was null or undefined when calling matterbridgeDeleteBridgeOfRoom().'
            );
        }

        if (requestParameters['token'] == null) {
            throw new runtime.RequiredError(
                'token',
                'Required parameter "token" was null or undefined when calling matterbridgeDeleteBridgeOfRoom().'
            );
        }

        if (requestParameters['oCSAPIRequest'] == null) {
            throw new runtime.RequiredError(
                'oCSAPIRequest',
                'Required parameter "oCSAPIRequest" was null or undefined when calling matterbridgeDeleteBridgeOfRoom().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (requestParameters['oCSAPIRequest'] != null) {
            headerParameters['OCS-APIRequest'] = String(requestParameters['oCSAPIRequest']);
        }

        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {
            headerParameters["Authorization"] = "Basic " + btoa(this.configuration.username + ":" + this.configuration.password);
        }
        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearer_auth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/ocs/v2.php/apps/spreed/api/{apiVersion}/bridge/{token}`.replace(`{${"apiVersion"}}`, encodeURIComponent(String(requestParameters['apiVersion']))).replace(`{${"token"}}`, encodeURIComponent(String(requestParameters['token']))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => MatterbridgeDeleteBridgeOfRoom200ResponseFromJSON(jsonValue));
    }

    /**
     * Delete bridge of one room
     */
    async matterbridgeDeleteBridgeOfRoom(requestParameters: MatterbridgeDeleteBridgeOfRoomRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MatterbridgeDeleteBridgeOfRoom200Response> {
        const response = await this.matterbridgeDeleteBridgeOfRoomRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Edit bridge information of one room
     */
    async matterbridgeEditBridgeOfRoomRaw(requestParameters: MatterbridgeEditBridgeOfRoomRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MatterbridgeEditBridgeOfRoom200Response>> {
        if (requestParameters['enabled'] == null) {
            throw new runtime.RequiredError(
                'enabled',
                'Required parameter "enabled" was null or undefined when calling matterbridgeEditBridgeOfRoom().'
            );
        }

        if (requestParameters['apiVersion'] == null) {
            throw new runtime.RequiredError(
                'apiVersion',
                'Required parameter "apiVersion" was null or undefined when calling matterbridgeEditBridgeOfRoom().'
            );
        }

        if (requestParameters['token'] == null) {
            throw new runtime.RequiredError(
                'token',
                'Required parameter "token" was null or undefined when calling matterbridgeEditBridgeOfRoom().'
            );
        }

        if (requestParameters['oCSAPIRequest'] == null) {
            throw new runtime.RequiredError(
                'oCSAPIRequest',
                'Required parameter "oCSAPIRequest" was null or undefined when calling matterbridgeEditBridgeOfRoom().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['enabled'] != null) {
            queryParameters['enabled'] = requestParameters['enabled'];
        }

        if (requestParameters['parts'] != null) {
            queryParameters['parts'] = requestParameters['parts'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (requestParameters['oCSAPIRequest'] != null) {
            headerParameters['OCS-APIRequest'] = String(requestParameters['oCSAPIRequest']);
        }

        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {
            headerParameters["Authorization"] = "Basic " + btoa(this.configuration.username + ":" + this.configuration.password);
        }
        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearer_auth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/ocs/v2.php/apps/spreed/api/{apiVersion}/bridge/{token}`.replace(`{${"apiVersion"}}`, encodeURIComponent(String(requestParameters['apiVersion']))).replace(`{${"token"}}`, encodeURIComponent(String(requestParameters['token']))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => MatterbridgeEditBridgeOfRoom200ResponseFromJSON(jsonValue));
    }

    /**
     * Edit bridge information of one room
     */
    async matterbridgeEditBridgeOfRoom(requestParameters: MatterbridgeEditBridgeOfRoomRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MatterbridgeEditBridgeOfRoom200Response> {
        const response = await this.matterbridgeEditBridgeOfRoomRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Get bridge information of one room
     */
    async matterbridgeGetBridgeOfRoomRaw(requestParameters: MatterbridgeGetBridgeOfRoomRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MatterbridgeGetBridgeOfRoom200Response>> {
        if (requestParameters['apiVersion'] == null) {
            throw new runtime.RequiredError(
                'apiVersion',
                'Required parameter "apiVersion" was null or undefined when calling matterbridgeGetBridgeOfRoom().'
            );
        }

        if (requestParameters['token'] == null) {
            throw new runtime.RequiredError(
                'token',
                'Required parameter "token" was null or undefined when calling matterbridgeGetBridgeOfRoom().'
            );
        }

        if (requestParameters['oCSAPIRequest'] == null) {
            throw new runtime.RequiredError(
                'oCSAPIRequest',
                'Required parameter "oCSAPIRequest" was null or undefined when calling matterbridgeGetBridgeOfRoom().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (requestParameters['oCSAPIRequest'] != null) {
            headerParameters['OCS-APIRequest'] = String(requestParameters['oCSAPIRequest']);
        }

        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {
            headerParameters["Authorization"] = "Basic " + btoa(this.configuration.username + ":" + this.configuration.password);
        }
        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearer_auth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/ocs/v2.php/apps/spreed/api/{apiVersion}/bridge/{token}`.replace(`{${"apiVersion"}}`, encodeURIComponent(String(requestParameters['apiVersion']))).replace(`{${"token"}}`, encodeURIComponent(String(requestParameters['token']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => MatterbridgeGetBridgeOfRoom200ResponseFromJSON(jsonValue));
    }

    /**
     * Get bridge information of one room
     */
    async matterbridgeGetBridgeOfRoom(requestParameters: MatterbridgeGetBridgeOfRoomRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MatterbridgeGetBridgeOfRoom200Response> {
        const response = await this.matterbridgeGetBridgeOfRoomRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Get bridge process information
     */
    async matterbridgeGetBridgeProcessStateRaw(requestParameters: MatterbridgeGetBridgeProcessStateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MatterbridgeEditBridgeOfRoom200Response>> {
        if (requestParameters['apiVersion'] == null) {
            throw new runtime.RequiredError(
                'apiVersion',
                'Required parameter "apiVersion" was null or undefined when calling matterbridgeGetBridgeProcessState().'
            );
        }

        if (requestParameters['token'] == null) {
            throw new runtime.RequiredError(
                'token',
                'Required parameter "token" was null or undefined when calling matterbridgeGetBridgeProcessState().'
            );
        }

        if (requestParameters['oCSAPIRequest'] == null) {
            throw new runtime.RequiredError(
                'oCSAPIRequest',
                'Required parameter "oCSAPIRequest" was null or undefined when calling matterbridgeGetBridgeProcessState().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (requestParameters['oCSAPIRequest'] != null) {
            headerParameters['OCS-APIRequest'] = String(requestParameters['oCSAPIRequest']);
        }

        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {
            headerParameters["Authorization"] = "Basic " + btoa(this.configuration.username + ":" + this.configuration.password);
        }
        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearer_auth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/ocs/v2.php/apps/spreed/api/{apiVersion}/bridge/{token}/process`.replace(`{${"apiVersion"}}`, encodeURIComponent(String(requestParameters['apiVersion']))).replace(`{${"token"}}`, encodeURIComponent(String(requestParameters['token']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => MatterbridgeEditBridgeOfRoom200ResponseFromJSON(jsonValue));
    }

    /**
     * Get bridge process information
     */
    async matterbridgeGetBridgeProcessState(requestParameters: MatterbridgeGetBridgeProcessStateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MatterbridgeEditBridgeOfRoom200Response> {
        const response = await this.matterbridgeGetBridgeProcessStateRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/**
 * @export
 */
export const MatterbridgeDeleteBridgeOfRoomApiVersionEnum = {
    V1: 'v1'
} as const;
export type MatterbridgeDeleteBridgeOfRoomApiVersionEnum = typeof MatterbridgeDeleteBridgeOfRoomApiVersionEnum[keyof typeof MatterbridgeDeleteBridgeOfRoomApiVersionEnum];
/**
 * @export
 */
export const MatterbridgeEditBridgeOfRoomEnabledEnum = {
    NUMBER_0: 0,
    NUMBER_1: 1
} as const;
export type MatterbridgeEditBridgeOfRoomEnabledEnum = typeof MatterbridgeEditBridgeOfRoomEnabledEnum[keyof typeof MatterbridgeEditBridgeOfRoomEnabledEnum];
/**
 * @export
 */
export const MatterbridgeEditBridgeOfRoomApiVersionEnum = {
    V1: 'v1'
} as const;
export type MatterbridgeEditBridgeOfRoomApiVersionEnum = typeof MatterbridgeEditBridgeOfRoomApiVersionEnum[keyof typeof MatterbridgeEditBridgeOfRoomApiVersionEnum];
/**
 * @export
 */
export const MatterbridgeGetBridgeOfRoomApiVersionEnum = {
    V1: 'v1'
} as const;
export type MatterbridgeGetBridgeOfRoomApiVersionEnum = typeof MatterbridgeGetBridgeOfRoomApiVersionEnum[keyof typeof MatterbridgeGetBridgeOfRoomApiVersionEnum];
/**
 * @export
 */
export const MatterbridgeGetBridgeProcessStateApiVersionEnum = {
    V1: 'v1'
} as const;
export type MatterbridgeGetBridgeProcessStateApiVersionEnum = typeof MatterbridgeGetBridgeProcessStateApiVersionEnum[keyof typeof MatterbridgeGetBridgeProcessStateApiVersionEnum];
