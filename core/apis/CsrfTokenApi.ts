/* tslint:disable */
/* eslint-disable */
/**
 * core-full
 * Core functionality of Nextcloud
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime.ts';
import type {
  CsrfTokenIndex200Response,
} from '../models/index.ts';
import {
    CsrfTokenIndex200ResponseFromJSON,
    CsrfTokenIndex200ResponseToJSON,
} from '../models/index.ts';

/**
 * 
 */
export class CsrfTokenApi extends runtime.BaseAPI {

    /**
     * Returns a new CSRF token.
     */
    async csrfTokenIndexRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CsrfTokenIndex200Response>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {
            headerParameters["Authorization"] = "Basic " + btoa(this.configuration.username + ":" + this.configuration.password);
        }
        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearer_auth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/index.php/csrftoken`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CsrfTokenIndex200ResponseFromJSON(jsonValue));
    }

    /**
     * Returns a new CSRF token.
     */
    async csrfTokenIndex(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CsrfTokenIndex200Response> {
        const response = await this.csrfTokenIndexRaw(initOverrides);
        return await response.value();
    }

}
