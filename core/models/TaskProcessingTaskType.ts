/* tslint:disable */
/* eslint-disable */
/**
 * core
 * Core functionality of Nextcloud
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.ts';
import type { TaskProcessingShape } from './TaskProcessingShape.ts';
import {
    TaskProcessingShapeFromJSON,
    TaskProcessingShapeFromJSONTyped,
    TaskProcessingShapeToJSON,
} from './TaskProcessingShape.ts';

/**
 * 
 * @export
 * @interface TaskProcessingTaskType
 */
export interface TaskProcessingTaskType {
    /**
     * 
     * @type {string}
     * @memberof TaskProcessingTaskType
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof TaskProcessingTaskType
     */
    description: string;
    /**
     * 
     * @type {Array<TaskProcessingShape>}
     * @memberof TaskProcessingTaskType
     */
    inputShape: Array<TaskProcessingShape>;
    /**
     * 
     * @type {Array<TaskProcessingShape>}
     * @memberof TaskProcessingTaskType
     */
    outputShape: Array<TaskProcessingShape>;
}

/**
 * Check if a given object implements the TaskProcessingTaskType interface.
 */
export function instanceOfTaskProcessingTaskType(value: object): value is TaskProcessingTaskType {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('inputShape' in value) || value['inputShape'] === undefined) return false;
    if (!('outputShape' in value) || value['outputShape'] === undefined) return false;
    return true;
}

export function TaskProcessingTaskTypeFromJSON(json: any): TaskProcessingTaskType {
    return TaskProcessingTaskTypeFromJSONTyped(json, false);
}

export function TaskProcessingTaskTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): TaskProcessingTaskType {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'description': json['description'],
        'inputShape': ((json['inputShape'] as Array<any>).map(TaskProcessingShapeFromJSON)),
        'outputShape': ((json['outputShape'] as Array<any>).map(TaskProcessingShapeFromJSON)),
    };
}

export function TaskProcessingTaskTypeToJSON(value?: TaskProcessingTaskType | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'name': value['name'],
        'description': value['description'],
        'inputShape': ((value['inputShape'] as Array<any>).map(TaskProcessingShapeToJSON)),
        'outputShape': ((value['outputShape'] as Array<any>).map(TaskProcessingShapeToJSON)),
    };
}

