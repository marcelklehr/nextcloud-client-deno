/* tslint:disable */
/* eslint-disable */
/**
 * core-full
 * Core functionality of Nextcloud
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.ts';
/**
 * 
 * @export
 * @interface PreviewGetPreviewRequest
 */
export interface PreviewGetPreviewRequest {
    /**
     * Path of the file
     * @type {string}
     * @memberof PreviewGetPreviewRequest
     */
    file?: string;
    /**
     * Width of the preview. A width of -1 will use the original image width.
     * @type {number}
     * @memberof PreviewGetPreviewRequest
     */
    x?: number;
    /**
     * Height of the preview. A height of -1 will use the original image height.
     * @type {number}
     * @memberof PreviewGetPreviewRequest
     */
    y?: number;
    /**
     * Preserve the aspect ratio
     * @type {boolean}
     * @memberof PreviewGetPreviewRequest
     */
    a?: boolean;
    /**
     * Force returning an icon
     * @type {boolean}
     * @memberof PreviewGetPreviewRequest
     */
    forceIcon?: boolean;
    /**
     * How to crop the image
     * @type {string}
     * @memberof PreviewGetPreviewRequest
     */
    mode?: PreviewGetPreviewRequestModeEnum;
    /**
     * Whether to fallback to the mime icon if no preview is available
     * @type {boolean}
     * @memberof PreviewGetPreviewRequest
     */
    mimeFallback?: boolean;
}


/**
 * @export
 */
export const PreviewGetPreviewRequestModeEnum = {
    Fill: 'fill',
    Cover: 'cover'
} as const;
export type PreviewGetPreviewRequestModeEnum = typeof PreviewGetPreviewRequestModeEnum[keyof typeof PreviewGetPreviewRequestModeEnum];


/**
 * Check if a given object implements the PreviewGetPreviewRequest interface.
 */
export function instanceOfPreviewGetPreviewRequest(value: object): value is PreviewGetPreviewRequest {
    return true;
}

export function PreviewGetPreviewRequestFromJSON(json: any): PreviewGetPreviewRequest {
    return PreviewGetPreviewRequestFromJSONTyped(json, false);
}

export function PreviewGetPreviewRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PreviewGetPreviewRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'file': json['file'] == null ? undefined : json['file'],
        'x': json['x'] == null ? undefined : json['x'],
        'y': json['y'] == null ? undefined : json['y'],
        'a': json['a'] == null ? undefined : json['a'],
        'forceIcon': json['forceIcon'] == null ? undefined : json['forceIcon'],
        'mode': json['mode'] == null ? undefined : json['mode'],
        'mimeFallback': json['mimeFallback'] == null ? undefined : json['mimeFallback'],
    };
}

export function PreviewGetPreviewRequestToJSON(value?: PreviewGetPreviewRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'file': value['file'],
        'x': value['x'],
        'y': value['y'],
        'a': value['a'],
        'forceIcon': value['forceIcon'],
        'mode': value['mode'],
        'mimeFallback': value['mimeFallback'],
    };
}

