/* tslint:disable */
/* eslint-disable */
/**
 * core
 * Core functionality of Nextcloud
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.ts';
/**
 * 
 * @export
 * @interface OpenGraphObject
 */
export interface OpenGraphObject {
    /**
     * 
     * @type {string}
     * @memberof OpenGraphObject
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof OpenGraphObject
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof OpenGraphObject
     */
    description: string | null;
    /**
     * 
     * @type {string}
     * @memberof OpenGraphObject
     */
    thumb: string | null;
    /**
     * 
     * @type {string}
     * @memberof OpenGraphObject
     */
    link: string;
}

/**
 * Check if a given object implements the OpenGraphObject interface.
 */
export function instanceOfOpenGraphObject(value: object): value is OpenGraphObject {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('thumb' in value) || value['thumb'] === undefined) return false;
    if (!('link' in value) || value['link'] === undefined) return false;
    return true;
}

export function OpenGraphObjectFromJSON(json: any): OpenGraphObject {
    return OpenGraphObjectFromJSONTyped(json, false);
}

export function OpenGraphObjectFromJSONTyped(json: any, ignoreDiscriminator: boolean): OpenGraphObject {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'description': json['description'],
        'thumb': json['thumb'],
        'link': json['link'],
    };
}

export function OpenGraphObjectToJSON(value?: OpenGraphObject | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'name': value['name'],
        'description': value['description'],
        'thumb': value['thumb'],
        'link': value['link'],
    };
}

