/* tslint:disable */
/* eslint-disable */
/**
 * tables
 * Manage data the way you need it.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.ts';
import type { RowData } from './RowData.ts';
import {
    RowDataFromJSON,
    RowDataFromJSONTyped,
    RowDataToJSON,
} from './RowData.ts';

/**
 * 
 * @export
 * @interface Row
 */
export interface Row {
    /**
     * 
     * @type {number}
     * @memberof Row
     */
    id: number;
    /**
     * 
     * @type {number}
     * @memberof Row
     */
    tableId: number;
    /**
     * 
     * @type {string}
     * @memberof Row
     */
    createdBy: string;
    /**
     * 
     * @type {string}
     * @memberof Row
     */
    createdAt: string;
    /**
     * 
     * @type {string}
     * @memberof Row
     */
    lastEditBy: string;
    /**
     * 
     * @type {string}
     * @memberof Row
     */
    lastEditAt: string;
    /**
     * 
     * @type {RowData}
     * @memberof Row
     */
    data: RowData | null;
}

/**
 * Check if a given object implements the Row interface.
 */
export function instanceOfRow(value: object): value is Row {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('tableId' in value) || value['tableId'] === undefined) return false;
    if (!('createdBy' in value) || value['createdBy'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('lastEditBy' in value) || value['lastEditBy'] === undefined) return false;
    if (!('lastEditAt' in value) || value['lastEditAt'] === undefined) return false;
    if (!('data' in value) || value['data'] === undefined) return false;
    return true;
}

export function RowFromJSON(json: any): Row {
    return RowFromJSONTyped(json, false);
}

export function RowFromJSONTyped(json: any, ignoreDiscriminator: boolean): Row {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'tableId': json['tableId'],
        'createdBy': json['createdBy'],
        'createdAt': json['createdAt'],
        'lastEditBy': json['lastEditBy'],
        'lastEditAt': json['lastEditAt'],
        'data': RowDataFromJSON(json['data']),
    };
}

export function RowToJSON(value?: Row | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'tableId': value['tableId'],
        'createdBy': value['createdBy'],
        'createdAt': value['createdAt'],
        'lastEditBy': value['lastEditBy'],
        'lastEditAt': value['lastEditAt'],
        'data': RowDataToJSON(value['data']),
    };
}

