/* tslint:disable */
/* eslint-disable */
/**
 * tables
 * Manage data the way you need it.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.ts';
/**
 * 
 * @export
 * @interface ImportState
 */
export interface ImportState {
    /**
     * 
     * @type {number}
     * @memberof ImportState
     */
    foundColumnsCount: number;
    /**
     * 
     * @type {number}
     * @memberof ImportState
     */
    matchingColumnsCount: number;
    /**
     * 
     * @type {number}
     * @memberof ImportState
     */
    createdColumnsCount: number;
    /**
     * 
     * @type {number}
     * @memberof ImportState
     */
    insertedRowsCount: number;
    /**
     * 
     * @type {number}
     * @memberof ImportState
     */
    errorsParsingCount: number;
    /**
     * 
     * @type {number}
     * @memberof ImportState
     */
    errorsCount: number;
}

/**
 * Check if a given object implements the ImportState interface.
 */
export function instanceOfImportState(value: object): value is ImportState {
    if (!('foundColumnsCount' in value) || value['foundColumnsCount'] === undefined) return false;
    if (!('matchingColumnsCount' in value) || value['matchingColumnsCount'] === undefined) return false;
    if (!('createdColumnsCount' in value) || value['createdColumnsCount'] === undefined) return false;
    if (!('insertedRowsCount' in value) || value['insertedRowsCount'] === undefined) return false;
    if (!('errorsParsingCount' in value) || value['errorsParsingCount'] === undefined) return false;
    if (!('errorsCount' in value) || value['errorsCount'] === undefined) return false;
    return true;
}

export function ImportStateFromJSON(json: any): ImportState {
    return ImportStateFromJSONTyped(json, false);
}

export function ImportStateFromJSONTyped(json: any, ignoreDiscriminator: boolean): ImportState {
    if (json == null) {
        return json;
    }
    return {
        
        'foundColumnsCount': json['found_columns_count'],
        'matchingColumnsCount': json['matching_columns_count'],
        'createdColumnsCount': json['created_columns_count'],
        'insertedRowsCount': json['inserted_rows_count'],
        'errorsParsingCount': json['errors_parsing_count'],
        'errorsCount': json['errors_count'],
    };
}

export function ImportStateToJSON(value?: ImportState | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'found_columns_count': value['foundColumnsCount'],
        'matching_columns_count': value['matchingColumnsCount'],
        'created_columns_count': value['createdColumnsCount'],
        'inserted_rows_count': value['insertedRowsCount'],
        'errors_parsing_count': value['errorsParsingCount'],
        'errors_count': value['errorsCount'],
    };
}

