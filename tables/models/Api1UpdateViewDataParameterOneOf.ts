/* tslint:disable */
/* eslint-disable */
/**
 * tables
 * Manage data the way you need it.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.ts';
/**
 * 
 * @export
 * @interface Api1UpdateViewDataParameterOneOf
 */
export interface Api1UpdateViewDataParameterOneOf {
    /**
     * 
     * @type {string}
     * @memberof Api1UpdateViewDataParameterOneOf
     */
    key: Api1UpdateViewDataParameterOneOfKeyEnum;
    /**
     * 
     * @type {string}
     * @memberof Api1UpdateViewDataParameterOneOf
     */
    value: string;
}


/**
 * @export
 */
export const Api1UpdateViewDataParameterOneOfKeyEnum = {
    Title: 'title',
    Emoji: 'emoji',
    Description: 'description'
} as const;
export type Api1UpdateViewDataParameterOneOfKeyEnum = typeof Api1UpdateViewDataParameterOneOfKeyEnum[keyof typeof Api1UpdateViewDataParameterOneOfKeyEnum];


/**
 * Check if a given object implements the Api1UpdateViewDataParameterOneOf interface.
 */
export function instanceOfApi1UpdateViewDataParameterOneOf(value: object): value is Api1UpdateViewDataParameterOneOf {
    if (!('key' in value) || value['key'] === undefined) return false;
    if (!('value' in value) || value['value'] === undefined) return false;
    return true;
}

export function Api1UpdateViewDataParameterOneOfFromJSON(json: any): Api1UpdateViewDataParameterOneOf {
    return Api1UpdateViewDataParameterOneOfFromJSONTyped(json, false);
}

export function Api1UpdateViewDataParameterOneOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): Api1UpdateViewDataParameterOneOf {
    if (json == null) {
        return json;
    }
    return {
        
        'key': json['key'],
        'value': json['value'],
    };
}

export function Api1UpdateViewDataParameterOneOfToJSON(value?: Api1UpdateViewDataParameterOneOf | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'key': value['key'],
        'value': value['value'],
    };
}

