/* tslint:disable */
/* eslint-disable */
/**
 * tables
 * Manage data the way you need it.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Api1CreateRowInTableDataParameterOneOf } from './Api1CreateRowInTableDataParameterOneOf.ts';
import {
    instanceOfApi1CreateRowInTableDataParameterOneOf,
    Api1CreateRowInTableDataParameterOneOfFromJSON,
    Api1CreateRowInTableDataParameterOneOfFromJSONTyped,
    Api1CreateRowInTableDataParameterOneOfToJSON,
/*} from './Api1CreateRowInTableDataParameterOneOf.ts';
import type { string } from './string.ts';
import {
    instanceOfstring,
    stringFromJSON,
    stringFromJSONTyped,
    stringToJSON,
} from './string.ts';
*/
/**
 * @type Api1CreateRowInTableDataParameter
 * 
 * @export
 */
export type Api1CreateRowInTableDataParameter = Api1CreateRowInTableDataParameterOneOf | string;

export function Api1CreateRowInTableDataParameterFromJSON(json: any): Api1CreateRowInTableDataParameter {
    return Api1CreateRowInTableDataParameterFromJSONTyped(json, false);
}

export function Api1CreateRowInTableDataParameterFromJSONTyped(json: any, ignoreDiscriminator: boolean): Api1CreateRowInTableDataParameter {
    if (json == null) {
        return json;
    }
    if (instanceOfApi1CreateRowInTableDataParameterOneOf(json)) {
        return Api1CreateRowInTableDataParameterOneOfFromJSONTyped(json, true);
    }
    if (instanceOfstring(json)) {
        return stringFromJSONTyped(json, true);
    }
}

export function Api1CreateRowInTableDataParameterToJSON(value?: Api1CreateRowInTableDataParameter | null): any {
    if (value == null) {
        return value;
    }

    if (instanceOfApi1CreateRowInTableDataParameterOneOf(value)) {
        return Api1CreateRowInTableDataParameterOneOfToJSON(value as Api1CreateRowInTableDataParameterOneOf);
    }
    if (instanceOfstring(value)) {
        return stringToJSON(value as string);
    }

    return {};
}

