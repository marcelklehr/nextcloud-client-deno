/* tslint:disable */
/* eslint-disable */
/**
 * tables
 * Manage data the way you need it.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.ts';
/**
 * 
 * @export
 * @interface Context
 */
export interface Context {
    /**
     * 
     * @type {number}
     * @memberof Context
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof Context
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof Context
     */
    iconName: string;
    /**
     * 
     * @type {string}
     * @memberof Context
     */
    description: string;
    /**
     * 
     * @type {string}
     * @memberof Context
     */
    owner: string;
    /**
     * 
     * @type {number}
     * @memberof Context
     */
    ownerType: number;
}

/**
 * Check if a given object implements the Context interface.
 */
export function instanceOfContext(value: object): value is Context {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('iconName' in value) || value['iconName'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('owner' in value) || value['owner'] === undefined) return false;
    if (!('ownerType' in value) || value['ownerType'] === undefined) return false;
    return true;
}

export function ContextFromJSON(json: any): Context {
    return ContextFromJSONTyped(json, false);
}

export function ContextFromJSONTyped(json: any, ignoreDiscriminator: boolean): Context {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'iconName': json['iconName'],
        'description': json['description'],
        'owner': json['owner'],
        'ownerType': json['ownerType'],
    };
}

export function ContextToJSON(value?: Context | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'name': value['name'],
        'iconName': value['iconName'],
        'description': value['description'],
        'owner': value['owner'],
        'ownerType': value['ownerType'],
    };
}

